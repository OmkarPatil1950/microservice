package com.example.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataIntegrityViolationException;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.DTO.UserDTO;
import com.example.demo.entity.User;
import com.example.demo.entity.UserDetails;
import com.example.demo.service.userService;

import jakarta.validation.Valid;

@RestController
@RequestMapping("/users")
public class userController {

	@Autowired
	private userService userservice;

	@GetMapping
	public ResponseEntity<?> getAllUsers() {

		List<User> user = userservice.getAllUsers();
		return new ResponseEntity(user, HttpStatus.OK);
	}

	@PostMapping("/save")
	public ResponseEntity<?> saveUser(@RequestBody @Valid UserDTO userdto) {

		User savedUser = userservice.saveUser(userdto);
		return ResponseEntity.status(HttpStatus.CREATED)
				.body("User created successfully with userId: " + savedUser.getUserId());
	}

	@GetMapping("/OrderbyUserId")
	public ResponseEntity<?> getOrderByUserId(@RequestParam int userId){
		String user = userservice.OrderByUserId(userId);
		if(user != null) {
			return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Order is empty");
		}
		else {
			return ResponseEntity.status(HttpStatus.OK).body(user);			
		}
	}

}
