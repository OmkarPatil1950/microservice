<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="jakarta.validation.Valid"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonFormat"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.Pattern"/>
    <fullyQualifiedTypeName name="com.example.order.entity.OrderEntity"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration"/>
    <fullyQualifiedTypeName name="com.example.demo.config.WebClientConfig"/>
    <fullyQualifiedTypeName name="org.springframework.web.reactive.function.client.WebClient"/>
    <fullyQualifiedTypeName name="com.example.demo.serviceImplimentation.userServiceImpl"/>
    <fullyQualifiedTypeName name="com.example.demo.entity.User"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="com.example.demo.DTO.OrderEntityDTO"/>
    <fullyQualifiedTypeName name="org.springframework.web.reactive.function.client.WebClient.Builder"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.SecurityFilterChain"/>
    <fullyQualifiedTypeName name="org.apache.http.protocol.HTTP"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="javax.security.sasl.AuthorizeCallback"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.core.OAuth2AccessToken"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.NotEmpty"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties.Opaquetoken"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.server.resource.introspection.NimbusOpaqueTokenIntrospector"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalanced"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.timelimiter.annotation.TimeLimiter"/>
    <fullyQualifiedTypeName name="java.lang.Thread"/>
    <fullyQualifiedTypeName name="java.util.concurrent.CompletableFuture"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.retry.annotation.Retry"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.admin.NewTopic"/>
    <fullyQualifiedTypeName name="jakarta.ws.rs.BeanParam"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.config.TopicBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.KafkaTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatusCode"/>
    <fullyQualifiedTypeName name="java.lang.Long"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.KafkaListener"/>
    <fullyQualifiedTypeName name="com.netflix.discovery.converters.Auto"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.EnableKafka"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.ConsumerFactory"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.deser.std.StringDeserializer"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.annotation.JsonDeserialize"/>
    <fullyQualifiedTypeName name="com.example.demo.DTO.LocationDto"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.consumer.ConsumerConfig"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.JsonDeserializer"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.support.serializer.JsonDeserializer"/>
    <fullyQualifiedTypeName name="org.apache.kafka.common.serialization.StringDeserializer"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="com.example.order.dto.LocationDto"/>
</qualifiedTypeNameHistroy>
